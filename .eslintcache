[{"/Users/leehohyun/Desktop/react-typescript/src/index.tsx":"1","/Users/leehohyun/Desktop/react-typescript/src/component/nav/Nav.tsx":"2","/Users/leehohyun/Desktop/react-typescript/src/styles/mixin.ts":"3","/Users/leehohyun/Desktop/react-typescript/src/pages/test/Test.tsx":"4","/Users/leehohyun/Desktop/react-typescript/src/pages/infiniteScroll/InfiniteScroll.tsx":"5","/Users/leehohyun/Desktop/react-typescript/src/Routes.tsx":"6","/Users/leehohyun/Desktop/react-typescript/src/pages/firebase/FireBase.ts":"7","/Users/leehohyun/Desktop/react-typescript/src/pages/infiniteSlider/InfiniteSlider.tsx":"8","/Users/leehohyun/Desktop/react-typescript/src/pages/slider/Slider.tsx":"9","/Users/leehohyun/Desktop/react-typescript/src/App.tsx":"10","/Users/leehohyun/Desktop/react-typescript/src/pages/firebase/FireBaseEX.tsx":"11","/Users/leehohyun/Desktop/react-typescript/src/pages/pagination/Pagination.tsx":"12","/Users/leehohyun/Desktop/react-typescript/src/pages/autoSlider/AutoSlider.tsx":"13","/Users/leehohyun/Desktop/react-typescript/src/hooks/useInterval.ts":"14","/Users/leehohyun/Desktop/react-typescript/src/pages/emailSend/EmailSend.tsx":"15","/Users/leehohyun/Desktop/react-typescript/src/pages/emailSend/EmailSendAPI.tsx":"16","/Users/leehohyun/Desktop/react-typescript/src/pages/emailSend/EmailSendSDK.tsx":"17"},{"size":173,"mtime":1613441791136,"results":"18","hashOfConfig":"19"},{"size":758,"mtime":1614915384692,"results":"20","hashOfConfig":"19"},{"size":329,"mtime":1613441791137,"results":"21","hashOfConfig":"19"},{"size":1193,"mtime":1614672649231,"results":"22","hashOfConfig":"19"},{"size":1864,"mtime":1614070153433,"results":"23","hashOfConfig":"19"},{"size":1081,"mtime":1614070858082,"results":"24","hashOfConfig":"19"},{"size":510,"mtime":1614932355650,"results":"25","hashOfConfig":"19"},{"size":3739,"mtime":1614070149111,"results":"26","hashOfConfig":"19"},{"size":2866,"mtime":1614070151077,"results":"27","hashOfConfig":"19"},{"size":150,"mtime":1614070166465,"results":"28","hashOfConfig":"19"},{"size":2569,"mtime":1614932802378,"results":"29","hashOfConfig":"19"},{"size":3539,"mtime":1614070465095,"results":"30","hashOfConfig":"19"},{"size":4030,"mtime":1614906935500,"results":"31","hashOfConfig":"19"},{"size":533,"mtime":1614071995490,"results":"32","hashOfConfig":"19"},{"size":1057,"mtime":1614916147023,"results":"33","hashOfConfig":"19"},{"size":2068,"mtime":1614915335790,"results":"34","hashOfConfig":"19"},{"size":1805,"mtime":1614914768693,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"bgyy5m",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/leehohyun/Desktop/react-typescript/src/index.tsx",[],["76","77"],"/Users/leehohyun/Desktop/react-typescript/src/component/nav/Nav.tsx",["78"],"import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport mixin from '../../styles/mixin';\n\nconst SCContainer = styled.div`\n  width: 100%;\n  height: 70px;\n  position: fixed;\n  top: 0;\n  ${mixin.flexSet('space-around', 'center', 'row')};\n  background: skyblue;\n`;\n\nconst SCLink = styled(Link)`\n  font-size: 30px;\n  font-weight: bold;\n  text-decoration: none;\n  color: black;\n`;\n\nconst PAGELISTS = ['pagination', 'fireBaseEx', 'slider', 'infiniteSlider', 'infiniteScroll', 'autoSlider', 'emailSend', 'test'];\n\nconst Nav = () => {\n  return (\n    <SCContainer>\n      {PAGELISTS.map((page, idx) => <SCLink key={idx} to={`/${page}`}>{page}</SCLink>)}\n    </SCContainer>\n  );\n};\n\nexport default Nav;",["79","80"],"/Users/leehohyun/Desktop/react-typescript/src/styles/mixin.ts",[],"/Users/leehohyun/Desktop/react-typescript/src/pages/test/Test.tsx",["81","82"],"/Users/leehohyun/Desktop/react-typescript/src/pages/infiniteScroll/InfiniteScroll.tsx",["83","84","85"],"/Users/leehohyun/Desktop/react-typescript/src/Routes.tsx",[],"/Users/leehohyun/Desktop/react-typescript/src/pages/firebase/FireBase.ts",["86"],"/Users/leehohyun/Desktop/react-typescript/src/pages/infiniteSlider/InfiniteSlider.tsx",["87"],"/Users/leehohyun/Desktop/react-typescript/src/pages/slider/Slider.tsx",[],"/Users/leehohyun/Desktop/react-typescript/src/App.tsx",[],"/Users/leehohyun/Desktop/react-typescript/src/pages/firebase/FireBaseEX.tsx",["88"],"/Users/leehohyun/Desktop/react-typescript/src/pages/pagination/Pagination.tsx",["89"],"import React, { useEffect, useState } from 'react';\nimport styled, {css} from 'styled-components';\nimport Nav from '../../component/nav/Nav';\nimport mixin from '../../styles/mixin';\n\ninterface IItem {\n  id: number;\n  contents: number;\n}\n\nconst SCContainer = styled.div`\n  height: 100vh;\n  ${mixin.flexSet()};\n`;\n\nconst SCItemsContainer = styled.div`\n  width: 80%;\n  height: 60%;\n  ${mixin.flexSet()};\n  padding: 5%;\n`;\n\nconst SCItems = styled.div`\n  width: 80%;\n  height: 10%;\n  border: 1px solid black;\n`;\n\nconst SCPageButtonContainer = styled.div`\n  width: 50%;\n  ${mixin.flexSet('center', 'center', 'row')};\n`;\n\nconst SCPageButton = styled.button<{ value?: number, currentPage?: number }>`\n  width: 50px;\n  height: 35px;\n  font-size: 1.5rem;\n  ${({ value, currentPage }) => css`\n    ${(value && (value === currentPage)) && css`\n      background-color: #348bee;\n      color: white;\n    `}\n  `};\n\n  & + & {\n    margin-left: 10px;\n  }\n\n  &:hover {\n    background-color: cyan;\n  }\n`;\n\nconst Pagination = () => {\n  const LIMIT = 10; // 한 번에 보여질 content 개수\n  const PAGELIMIT = 5; // 만들어질 버튼 개수\n  const [offset, setOffset] = useState(0); // 현재 페이지에 나타나는 content 시작 번호\n  const [items, setItems] = useState<IItem[]>([]); // 총 아이템 개수\n  const [pages, setPages] = useState<number[]>([]); // 총 페이지 개수\n  const [currentPage, setCurrentPage] = useState(1); // 현재 보이는 페이지\n\n  useEffect(() => {\n    const pagesArr = [];\n    const itemsArr: IItem[] = [];\n\n    for(let i = 1; i <= PAGELIMIT; i++) {\n      pagesArr.push(i);\n    }\n\n    // 아이템 추가\n    for(let i = 0; i < 100; i++) {\n      itemsArr.push({ id: i, contents: i });\n    }\n\n    setPages(pagesArr);\n    setItems(itemsArr);\n  }, []);\n\n  const btnOnClick = (num: number) => {\n    setOffset((num - 1) * LIMIT);\n    setCurrentPage(num);\n  }\n\n  const btnDirectOnClick = (dir: string) => {\n    const lastPage = Math.ceil(items.length / LIMIT);\n\n    if(dir === '<' && pages[0] > 1) {\n      setPages(pages.map(num => --num));\n      setCurrentPage(currentPage - 1);\n      setOffset(offset - 10);\n    }\n    else if(dir === '>' && pages[PAGELIMIT - 1] < lastPage) {\n      setPages(pages.map(num => ++num));\n      setCurrentPage(currentPage + 1);\n      setOffset(offset + 10);\n    }\n    else if(dir === '<<' && pages[0] > 1) {\n      setPages(pages.map((num, idx) => idx + 1));\n      setCurrentPage(1);\n      setOffset(0);\n    }\n    else if(dir === '>>' && pages[PAGELIMIT - 1] < lastPage) {\n      setPages(pages.map((num, idx) => lastPage - PAGELIMIT + idx + 1));\n      setCurrentPage(lastPage);\n      setOffset((lastPage - 1) * LIMIT);\n    }\n  }\n\n  return (\n    <SCContainer>\n      <Nav />\n      <SCItemsContainer>\n        {items.map(el => {\n          if(el.id >= offset && el.id < offset + LIMIT) {\n            return <SCItems key={el.id}>{el.contents}</SCItems>\n          }\n        })}\n      </SCItemsContainer>\n      <SCPageButtonContainer>\n        <SCPageButton onClick={() => btnDirectOnClick('<<')}>{'<<'}</SCPageButton>\n        <SCPageButton onClick={() => btnDirectOnClick('<')}>{'<'}</SCPageButton>\n        {pages.map(num => (<SCPageButton key={num} value={num} currentPage={currentPage} onClick={() => btnOnClick(num)}>{num}</SCPageButton>))}\n        <SCPageButton onClick={() => btnDirectOnClick('>')}>{'>'}</SCPageButton>\n        <SCPageButton onClick={() => btnDirectOnClick('>>')}>{'>>'}</SCPageButton>\n      </SCPageButtonContainer>\n    </SCContainer>\n  );\n};\n\nexport default Pagination;","/Users/leehohyun/Desktop/react-typescript/src/pages/autoSlider/AutoSlider.tsx",["90"],"/Users/leehohyun/Desktop/react-typescript/src/hooks/useInterval.ts",["91"],"import React, { useState, useEffect, useRef } from 'react';\n\ntype Tcallback = () => void;\n\nfunction useInterval(callback: Tcallback, delay: number | null) {\n  const savedCallback: React.MutableRefObject<any> = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nexport default useInterval;","/Users/leehohyun/Desktop/react-typescript/src/pages/emailSend/EmailSend.tsx",[],"/Users/leehohyun/Desktop/react-typescript/src/pages/emailSend/EmailSendAPI.tsx",["92","93"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport emailjs, { init } from 'emailjs-com';\nimport mixin from '../../styles/mixin';\n\nconst SCContainer = styled.div`\n  ${mixin.flexSet()};\n  position: relative;\n`;\n\nconst SCFormContainer = styled.div`\n  ${mixin.flexSet('center', 'center', 'row')};\n  & + & {\n    margin-top: 20px;\n  }\n`;\n\nconst SCInfo = styled.p`\n  margin: 0 20px 0 0;\n  padding: 0;\n  font-size: 20px;\n`;\n\nconst SCInput = styled.input`\n  width: 400px;\n`;\n\nconst SCButton = styled.button`\n  height: 70px;\n  margin-top: 50px;\n  font-size: 20px;\n  border-radius: 35px;\n`;\n\nconst SCResponse = styled.div`\n  font-size: 20px;\n  position: absolute;\n  right: 0;\n  bottom: 0;\n`;\n\nconst EmailSendAPI = () => {\n  const [name, setName] = useState('');\n  const [text, setText] = useState('');\n  const [response, setResponse] = useState('');\n\n  const onChange = (e:React.ChangeEvent<HTMLInputElement>) => {\n    if(e.target.name === 'name') {\n      setName(e.target.value);\n    }\n    else {\n      setText(e.target.value);\n    }\n  }\n\n  const onClick = (name: string, text: string) => {\n    fetch('https://api.emailjs.com/api/v1.0/email/send', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        user_id: 'user_23XqyzEM8MpAgcVkK58kp',\n        service_id: 'hemtory',\n        template_id: 'template_z9iyu2t',\n        template_params: {\n          name,\n          text\n        }\n      })\n    }).then(res => setResponse(res.ok ? '전송 성공' : '전송 실패'));\n  }\n\n  return (\n    <SCContainer>\n      <SCFormContainer>\n        <SCInfo>이름: </SCInfo>\n        <SCInput name='name' onChange={onChange}/>\n      </SCFormContainer>\n\n      <SCFormContainer>\n        <SCInfo>내용: </SCInfo>\n        <SCInput name='text' onChange={onChange}/>\n      </SCFormContainer>\n\n      <SCButton onClick={() => onClick(name, text)}>이메일 보내기 - API</SCButton>\n      \n      <SCResponse>{response}</SCResponse>\n    </SCContainer>\n  );\n};\n\nexport default EmailSendAPI;","/Users/leehohyun/Desktop/react-typescript/src/pages/emailSend/EmailSendSDK.tsx",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":2,"column":18,"nodeType":"100","messageId":"101","endLine":2,"endColumn":21},{"ruleId":"94","replacedBy":"102"},{"ruleId":"96","replacedBy":"103"},{"ruleId":"98","severity":1,"message":"104","line":11,"column":11,"nodeType":"100","messageId":"101","endLine":11,"endColumn":16},{"ruleId":"98","severity":1,"message":"105","line":17,"column":7,"nodeType":"100","messageId":"101","endLine":17,"endColumn":10},{"ruleId":"98","severity":1,"message":"99","line":2,"column":18,"nodeType":"100","messageId":"101","endLine":2,"endColumn":21},{"ruleId":"106","severity":1,"message":"107","line":43,"column":6,"nodeType":"108","endLine":43,"endColumn":8,"suggestions":"109"},{"ruleId":"106","severity":1,"message":"110","line":54,"column":6,"nodeType":"108","endLine":54,"endColumn":22,"suggestions":"111"},{"ruleId":"98","severity":1,"message":"112","line":3,"column":28,"nodeType":"100","messageId":"101","endLine":3,"endColumn":39},{"ruleId":"106","severity":1,"message":"113","line":104,"column":6,"nodeType":"108","endLine":104,"endColumn":17,"suggestions":"114"},{"ruleId":"106","severity":1,"message":"115","line":51,"column":6,"nodeType":"108","endLine":51,"endColumn":8,"suggestions":"116"},{"ruleId":"117","severity":1,"message":"118","line":113,"column":23,"nodeType":"119","messageId":"120","endLine":113,"endColumn":25},{"ruleId":"106","severity":1,"message":"113","line":106,"column":6,"nodeType":"108","endLine":106,"endColumn":17,"suggestions":"121"},{"ruleId":"98","severity":1,"message":"122","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":25},{"ruleId":"98","severity":1,"message":"123","line":3,"column":8,"nodeType":"100","messageId":"101","endLine":3,"endColumn":15},{"ruleId":"98","severity":1,"message":"124","line":3,"column":19,"nodeType":"100","messageId":"101","endLine":3,"endColumn":23},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"@typescript-eslint/no-unused-vars","'css' is defined but never used.","Identifier","unusedVar",["125"],["126"],"'Param' is defined but never used.","'Img' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'imgArr' and 'offset'. Either include them or remove the dependency array. You can also do a functional update 'setOffset(o => ...)' if you only need 'offset' in the 'setOffset' call.","ArrayExpression",["127"],"React Hook useEffect has missing dependencies: 'images', 'imgArr', and 'offset'. Either include them or remove the dependency array. You can also do a functional update 'SetImages(i => ...)' if you only need 'images' in the 'SetImages' call.",["128"],"'DATABASEURL' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'images.length'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setXPosition' needs the current value of 'images.length'.",["129"],"React Hook useEffect has a missing dependency: 'userRef'. Either include it or remove the dependency array.",["130"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["131"],"'useState' is defined but never used.","'emailjs' is defined but never used.","'init' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"136","fix":"140"},"Update the dependencies array to be: [imgArr, offset]",{"range":"141","text":"142"},"Update the dependencies array to be: [images, imgArr, offset, scrollPosition]",{"range":"143","text":"144"},"Update the dependencies array to be: [images.length, xPosition]",{"range":"145","text":"146"},"Update the dependencies array to be: [userRef]",{"range":"147","text":"148"},{"range":"149","text":"146"},[1261,1263],"[imgArr, offset]",[1567,1583],"[images, imgArr, offset, scrollPosition]",[2722,2733],"[images.length, xPosition]",[1131,1133],"[userRef]",[2817,2828]]